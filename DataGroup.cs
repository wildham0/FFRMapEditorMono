using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework;
using System.Reflection.Metadata;
using System.Text.Json;
using System.Security.Cryptography;

namespace FFRMapEditorMono
{
	public static class OwDataGroup
	{
		public static List<(OverworldTeleportIndex id, byte tile)> OwTeleportTiles = new()
		{
			(OverworldTeleportIndex.BahamutCave1, 0x6C),
			(OverworldTeleportIndex.Cardia1, 0x6A),
			(OverworldTeleportIndex.Cardia2, 0x66),
			(OverworldTeleportIndex.Cardia4, 0x67),
			(OverworldTeleportIndex.Cardia5, 0x68),
			(OverworldTeleportIndex.Cardia6, 0x69),
			(OverworldTeleportIndex.CastleOrdeals1, 0x38),
			(OverworldTeleportIndex.Coneria, 0x49),
			(OverworldTeleportIndex.ConeriaCastle1, 0x01),
			(OverworldTeleportIndex.CrescentLake, 0x4E),
			(OverworldTeleportIndex.DwarfCave, 0x2F),
			(OverworldTeleportIndex.EarthCave1, 0x0E),
			(OverworldTeleportIndex.Elfland, 0x4C),
			(OverworldTeleportIndex.ElflandCastle, 0x1B),
			(OverworldTeleportIndex.Gaia, 0x5A),
			(OverworldTeleportIndex.GurguVolcano1, 0x74),
			(OverworldTeleportIndex.IceCave1, 0x2B),
			(OverworldTeleportIndex.Lefein, 0x6D),
			(OverworldTeleportIndex.MarshCave1, 0x6E),
			(OverworldTeleportIndex.MatoyasCave, 0x32),
			(OverworldTeleportIndex.Melmond, 0x4D),
			(OverworldTeleportIndex.MirageTower1, 0x1D),
			(OverworldTeleportIndex.NorthwestCastle, 0x29),
			(OverworldTeleportIndex.Onrac, 0x5D),
			(OverworldTeleportIndex.Pravoka, 0x4A),
			(OverworldTeleportIndex.SardasCave, 0x3A),
			(OverworldTeleportIndex.TempleOfFiends1, 0x57),
			(OverworldTeleportIndex.TitansTunnelEast, 0x34),
			(OverworldTeleportIndex.TitansTunnelWest, 0x35),
			(OverworldTeleportIndex.Waterfall, 0x46),
		};

		public static List<(ExitTeleportIndex id, byte tile)> ExitTeleportTiles = new()
		{
			(ExitTeleportIndex.ExitCastleOrdeals, 0x38),
			(ExitTeleportIndex.ExitCastleConeria, 0x01),
			(ExitTeleportIndex.ExitEarthCave, 0x0E),
			(ExitTeleportIndex.ExitGurguVolcano, 0x74),
			(ExitTeleportIndex.ExitIceCave, 0x2B),
			(ExitTeleportIndex.ExitSkyPalace, 0x1D),
			(ExitTeleportIndex.ExitSeaShrine, 0x5D),
			(ExitTeleportIndex.ExitTitanE, 0x34),
			(ExitTeleportIndex.ExitTitanW, 0x35),
		};

		public static Dictionary<ExitTeleportIndex, OverworldTeleportIndex> ExitTeleportOwTeleporter = new()
		{
			{ ExitTeleportIndex.ExitCastleOrdeals, OverworldTeleportIndex.CastleOrdeals1 },
			{ ExitTeleportIndex.ExitCastleConeria, OverworldTeleportIndex.ConeriaCastle1 },
			{ ExitTeleportIndex.ExitEarthCave, OverworldTeleportIndex.EarthCave1 },
			{ ExitTeleportIndex.ExitGurguVolcano, OverworldTeleportIndex.GurguVolcano1 },
			{ ExitTeleportIndex.ExitIceCave, OverworldTeleportIndex.IceCave1 },
			{ ExitTeleportIndex.ExitSkyPalace, OverworldTeleportIndex.MirageTower1 },
			{ ExitTeleportIndex.ExitSeaShrine, OverworldTeleportIndex.Onrac },
			{ ExitTeleportIndex.ExitTitanE, OverworldTeleportIndex.TitansTunnelEast },
			{ ExitTeleportIndex.ExitTitanW, OverworldTeleportIndex.TitansTunnelWest },
		};

		public static Dictionary<int, OwEncounterGroup> OwEncounterIdToGroup = new()
		{
			{ 0, OwEncounterGroup.UpperOnracGroup },
			{ 1, OwEncounterGroup.NorthernEdgeGroup },
			{ 2, OwEncounterGroup.OrdealsGroup },
			{ 3, OwEncounterGroup.LowerOnracGroup },
			{ 4, OwEncounterGroup.CardiaGroup },
			{ 5, OwEncounterGroup.MirageDesertGroup },
			{ 6, OwEncounterGroup.LefeinGroup },
			{ 7, OwEncounterGroup.OopsAllImpsGroup },
			{ 8, OwEncounterGroup.TempleOfFiendsGroup },
			{ 9, OwEncounterGroup.ElflandGroup },
			{ 10, OwEncounterGroup.MelmondGroup },
			{ 11, OwEncounterGroup.ConeriaGroup },
			{ 12, OwEncounterGroup.PravokaGroup },
			{ 13, OwEncounterGroup.IceCaveGroup },
			{ 14, OwEncounterGroup.AspWolfGroup },
			{ 15, OwEncounterGroup.CrescentLakeGroup },
		};
		public static Dictionary<int, OwEncounterGroup> OwDomainsGroup = new()
		{
			{ 0, OwEncounterGroup.UpperOnracGroup },
			{ 1, OwEncounterGroup.UpperOnracGroup },
			{ 2, OwEncounterGroup.NorthernEdgeGroup },
			{ 3, OwEncounterGroup.OrdealsGroup },
			{ 4, OwEncounterGroup.OrdealsGroup },
			{ 5, OwEncounterGroup.NorthernEdgeGroup },
			{ 6, OwEncounterGroup.UpperOnracGroup },
			{ 7, OwEncounterGroup.UpperOnracGroup },
			{ 8, OwEncounterGroup.LowerOnracGroup },
			{ 9, OwEncounterGroup.UpperOnracGroup },
			{ 10, OwEncounterGroup.CardiaGroup },
			{ 11, OwEncounterGroup.OrdealsGroup },
			{ 12, OwEncounterGroup.OrdealsGroup },
			{ 13, OwEncounterGroup.MirageDesertGroup },
			{ 14, OwEncounterGroup.MirageDesertGroup },
			{ 15, OwEncounterGroup.LefeinGroup },
			{ 16, OwEncounterGroup.LowerOnracGroup },
			{ 17, OwEncounterGroup.LowerOnracGroup },
			{ 18, OwEncounterGroup.OopsAllImpsGroup },
			{ 19, OwEncounterGroup.CardiaGroup },
			{ 20, OwEncounterGroup.OopsAllImpsGroup },
			{ 21, OwEncounterGroup.MirageDesertGroup },
			{ 22, OwEncounterGroup.MirageDesertGroup },
			{ 23, OwEncounterGroup.LefeinGroup },
			{ 24, OwEncounterGroup.OopsAllImpsGroup },
			{ 25, OwEncounterGroup.OopsAllImpsGroup },
			{ 26, OwEncounterGroup.OopsAllImpsGroup },
			{ 27, OwEncounterGroup.TempleOfFiendsGroup },
			{ 28, OwEncounterGroup.TempleOfFiendsGroup },
			{ 29, OwEncounterGroup.ElflandGroup },
			{ 30, OwEncounterGroup.OopsAllImpsGroup },
			{ 31, OwEncounterGroup.LefeinGroup },
			{ 32, OwEncounterGroup.OopsAllImpsGroup },
			{ 33, OwEncounterGroup.MelmondGroup },
			{ 34, OwEncounterGroup.ElflandGroup },
			{ 35, OwEncounterGroup.ElflandGroup },
			{ 36, OwEncounterGroup.ConeriaGroup },
			{ 37, OwEncounterGroup.PravokaGroup },
			{ 38, OwEncounterGroup.PravokaGroup },
			{ 39, OwEncounterGroup.IceCaveGroup },
			{ 40, OwEncounterGroup.MelmondGroup },
			{ 41, OwEncounterGroup.MelmondGroup },
			{ 42, OwEncounterGroup.MelmondGroup },
			{ 43, OwEncounterGroup.ElflandGroup },
			{ 44, OwEncounterGroup.OopsAllImpsGroup },
			{ 45, OwEncounterGroup.AspWolfGroup },
			{ 46, OwEncounterGroup.IceCaveGroup },
			{ 47, OwEncounterGroup.IceCaveGroup },
			{ 48, OwEncounterGroup.OopsAllImpsGroup },
			{ 49, OwEncounterGroup.OopsAllImpsGroup },
			{ 50, OwEncounterGroup.IceCaveGroup },
			{ 51, OwEncounterGroup.ElflandGroup },
			{ 52, OwEncounterGroup.ElflandGroup },
			{ 53, OwEncounterGroup.IceCaveGroup },
			{ 54, OwEncounterGroup.CrescentLakeGroup },
			{ 55, OwEncounterGroup.CrescentLakeGroup },
			{ 56, OwEncounterGroup.OopsAllImpsGroup },
			{ 57, OwEncounterGroup.OopsAllImpsGroup },
			{ 58, OwEncounterGroup.IceCaveGroup },
			{ 59, OwEncounterGroup.IceCaveGroup },
			{ 60, OwEncounterGroup.ElflandGroup },
			{ 61, OwEncounterGroup.IceCaveGroup },
			{ 62, OwEncounterGroup.CrescentLakeGroup },
			{ 63, OwEncounterGroup.CrescentLakeGroup },
		};
		public static Dictionary<byte, TileGroup> TileByteToGroup = new()
		{
			{ 0x00, TileGroup.Land },
			{ 0x03, TileGroup.Forest },
			{ 0x04, TileGroup.Forest },
			{ 0x05, TileGroup.Forest },
			{ 0x13, TileGroup.Forest },
			{ 0x14, TileGroup.Forest },
			{ 0x15, TileGroup.Forest },
			{ 0x23, TileGroup.Forest },
			{ 0x24, TileGroup.Forest },
			{ 0x25, TileGroup.Forest },
			{ 0x06, TileGroup.Sea },
			{ 0x07, TileGroup.Sea },
			{ 0x08, TileGroup.Sea },
			{ 0x16, TileGroup.Sea },
			{ 0x17, TileGroup.Sea },
			{ 0x18, TileGroup.Sea },
			{ 0x26, TileGroup.Sea },
			{ 0x27, TileGroup.Sea },
			{ 0x28, TileGroup.Sea },
			{ 0x10, TileGroup.Mountain },
			{ 0x11, TileGroup.Mountain },
			{ 0x12, TileGroup.Mountain },
			{ 0x20, TileGroup.Mountain },
			{ 0x21, TileGroup.Mountain },
			{ 0x22, TileGroup.Mountain },
			{ 0x30, TileGroup.Mountain },
			{ 0x31, TileGroup.Mountain },
			{ 0x33, TileGroup.Mountain },
			{ 0x45, TileGroup.Desert }, 
			{ 0x42, TileGroup.Desert },
			{ 0x43, TileGroup.Desert },
			{ 0x52, TileGroup.Desert },
			{ 0x53, TileGroup.Desert },
			{ 0x40, TileGroup.River },
			{ 0x41, TileGroup.River },
			{ 0x50, TileGroup.River },
			{ 0x51, TileGroup.River },
			{ 0x44, TileGroup.River },
			{ 0x54, TileGroup.Grass },
			{ 0x60, TileGroup.Grass },
			{ 0x61, TileGroup.Grass },
			{ 0x70, TileGroup.Grass },
			{ 0x71, TileGroup.Grass },
			{ 0x55, TileGroup.Marsh },
			{ 0x62, TileGroup.Marsh },
			{ 0x63, TileGroup.Marsh },
			{ 0x72, TileGroup.Marsh },
			{ 0x73, TileGroup.Marsh },
			{ 0x32, TileGroup.MountainCave },
			{ 0x34, TileGroup.MountainCave },
			{ 0x35, TileGroup.MountainCave },
			{ 0x3A, TileGroup.MountainCave },
			{ 0x2B, TileGroup.MountainCave },
			{ 0x2F, TileGroup.MountainCave },
			{ 0x0E, TileGroup.MountainCave },
			{ 0x46, TileGroup.SeaRiver },
			{ 0x0D, TileGroup.SpecialDesert },
			{ 0x1D, TileGroup.SpecialDesert },
			{ 0x1E, TileGroup.SpecialDesert },
			{ 0x36, TileGroup.SpecialDesert },
			{ 0x37, TileGroup.SpecialDesert },
		};
		public static Dictionary<TileGroup, TileGroup> TileGroupCompatibility = new()
		{
			{ TileGroup.Land, TileGroup.Land },
			{ TileGroup.MountainCave, TileGroup.Mountain },
			{ TileGroup.Mountain, TileGroup.Mountain },
			{ TileGroup.Forest, TileGroup.Forest },
			{ TileGroup.Sea, TileGroup.SeaRiver },
			{ TileGroup.River, TileGroup.SeaRiver },
			{ TileGroup.SeaRiver, TileGroup.SeaRiver },
			{ TileGroup.Marsh, TileGroup.Marsh },
			{ TileGroup.Desert, TileGroup.Desert },
			{ TileGroup.SpecialDesert, TileGroup.Desert },
			{ TileGroup.Grass, TileGroup.Grass },
			{ TileGroup.Other, TileGroup.Other },
		};
		public static List<byte> BrushToTile = new()
		{
			0x00, 0x14, 0x21, 0x17, 0x45, 0x44, 0x54, 0x55
		};

	}
}